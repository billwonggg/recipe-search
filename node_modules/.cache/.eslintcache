[{"/Users/bill/Desktop/GitHub/recipeSearch/src/index.js":"1","/Users/bill/Desktop/GitHub/recipeSearch/src/reportWebVitals.js":"2","/Users/bill/Desktop/GitHub/recipeSearch/src/App.js":"3","/Users/bill/Desktop/GitHub/recipeSearch/src/Recipe.js":"4","/Users/bill/Desktop/GitHub/recipeSearch/src/ScrollBar.js":"5","/Users/bill/Desktop/GitHub/recipeSearch/src/Header.js":"6","/Users/bill/Desktop/GitHub/recipeSearch/src/Footer.js":"7","/Users/bill/Desktop/GitHub/recipeSearch/src/ScrollUp.js":"8"},{"size":500,"mtime":1644031884803,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1644035329536,"results":"11","hashOfConfig":"10"},{"size":2891,"mtime":1644195474400,"results":"12","hashOfConfig":"10"},{"size":629,"mtime":1644030663983,"results":"13","hashOfConfig":"10"},{"size":876,"mtime":1644029133549,"results":"14","hashOfConfig":"10"},{"size":798,"mtime":1644195976762,"results":"15","hashOfConfig":"10"},{"size":206,"mtime":1644032979878,"results":"16","hashOfConfig":"10"},{"size":1564,"mtime":1644195137519,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"19tsk8w",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/bill/Desktop/GitHub/recipeSearch/src/index.js",[],[],["44","45"],"/Users/bill/Desktop/GitHub/recipeSearch/src/reportWebVitals.js",[],[],"/Users/bill/Desktop/GitHub/recipeSearch/src/App.js",["46"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport ScrollBar from \"./ScrollBar\";\nimport Header from \"./Header\";\nimport Recipe from \"./Recipe\";\nimport Footer from \"./Footer\";\nimport ScrollUp from \"./ScrollUp\";\nimport HashLoader from \"react-spinners/HashLoader\";\n\nconst App = () => {\n  // States\n  const [loading, setLoading] = useState(false);\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"creamy pasta\");\n\n  // technically should use env variables\n  const APP_ID = \"1c61eb1d\";\n  const APP_KEY = \"3c4a2ff2fd50960b26e3a958a5f3234d\";\n  let endpoint = `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n  // Effects\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 4500);\n  }, []);\n\n  useEffect(() => {\n    recipeAPI();\n  }, [query]);\n\n  // make the API call asynchronously\n  const recipeAPI = async () => {\n    try {\n      const response = await fetch(endpoint);\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data.hits);\n        setRecipes(data.hits);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // every time the user types in the search box, we update the search box state\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  // when user presses the submit button, set the query state and clear search box\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      {loading ? (\n        <div className=\"loadingBG\">\n          <HashLoader color={\"#C03C75\"} loading={loading} size={75} />\n        </div>\n      ) : (\n        <>\n          <ScrollBar />\n          <ScrollUp showBelow={250} />\n          <div className=\"title\">\n            <Header />\n          </div>\n          <form className=\"searchForm\" onSubmit={getSearch}>\n            <input\n              className=\"inputField\"\n              type=\"text\"\n              value={search}\n              placeholder=\"Enter your favourite dish\"\n              onChange={updateSearch}\n            ></input>\n            <button className=\"searchButton\" type=\"submit\">\n              Search\n            </button>\n          </form>\n          <div className=\"allRecipes\">\n            {recipes.map((r, i) => (\n              <Recipe\n                key={\"recipe\" + i}\n                title={r.recipe.label}\n                calories={r.recipe.calories}\n                img={r.recipe.image}\n                cuisine={r.recipe.cuisineType}\n                ingredients={r.recipe.ingredients}\n              />\n            ))}\n          </div>\n          <div className=\"footer\">\n            <Footer />\n          </div>{\" \"}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","/Users/bill/Desktop/GitHub/recipeSearch/src/Recipe.js",[],[],"/Users/bill/Desktop/GitHub/recipeSearch/src/ScrollBar.js",[],[],"/Users/bill/Desktop/GitHub/recipeSearch/src/Header.js",[],[],"/Users/bill/Desktop/GitHub/recipeSearch/src/Footer.js",[],[],"/Users/bill/Desktop/GitHub/recipeSearch/src/ScrollUp.js",[],[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":32,"column":6,"nodeType":"53","endLine":32,"endColumn":13,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'recipeAPI'. Either include it or remove the dependency array.","ArrayExpression",["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [query, recipeAPI]",{"range":"60","text":"61"},[929,936],"[query, recipeAPI]"]