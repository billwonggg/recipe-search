{"ast":null,"code":"var _jsxFileName = \"/Users/bill/Desktop/GitHub/recipe-search/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport ScrollBar from \"./ScrollBar\";\nimport Header from \"./Header\";\nimport Recipe from \"./Recipe\";\nimport Footer from \"./Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // States\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"creamy pasta\"); // technically should use env variables\n\n  const APP_ID = \"1c61eb1d\";\n  const APP_KEY = \"3c4a2ff2fd50960b26e3a958a5f3234d\";\n  let endpoint = `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`; // Effects\n\n  useEffect(() => {\n    recipeAPI();\n  }, [query]); // make the API call asynchronously\n\n  const recipeAPI = async () => {\n    try {\n      const response = await fetch(endpoint);\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data.hits);\n        setRecipes(data.hits);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }; // every time the user types in the search box, we update the search box state\n\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  }; // when user presses the submit button, set the query state and clear search box\n\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ScrollBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"searchForm\",\n      onSubmit: getSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputField\",\n        type: \"text\",\n        value: search,\n        placeholder: \"Enter your favourite dish\",\n        onChange: updateSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchButton\",\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allRecipes\",\n      children: recipes.map((r, i) => /*#__PURE__*/_jsxDEV(Recipe, {\n        title: r.recipe.label,\n        calories: r.recipe.calories,\n        img: r.recipe.image,\n        cuisine: r.recipe.cuisineType,\n        ingredients: r.recipe.ingredients\n      }, \"recipe\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"5eAoMv3jg9iBfnK5vcLa+E0pkz8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bill/Desktop/GitHub/recipe-search/src/App.js"],"names":["React","useEffect","useState","ScrollBar","Header","Recipe","Footer","App","recipes","setRecipes","search","setSearch","query","setQuery","APP_ID","APP_KEY","endpoint","recipeAPI","response","fetch","ok","data","json","console","log","hits","error","updateSearch","e","target","value","getSearch","preventDefault","map","r","i","recipe","label","calories","image","cuisineType","ingredients"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport ScrollBar from \"./ScrollBar\";\nimport Header from \"./Header\";\nimport Recipe from \"./Recipe\";\nimport Footer from \"./Footer\";\n\nconst App = () => {\n  // States\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"creamy pasta\");\n\n  // technically should use env variables\n  const APP_ID = \"1c61eb1d\";\n  const APP_KEY = \"3c4a2ff2fd50960b26e3a958a5f3234d\";\n  let endpoint = `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n  // Effects\n  useEffect(() => {\n    recipeAPI();\n  }, [query]);\n\n  // make the API call asynchronously\n  const recipeAPI = async () => {\n    try {\n      const response = await fetch(endpoint);\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data.hits);\n        setRecipes(data.hits);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // every time the user types in the search box, we update the search box state\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  // when user presses the submit button, set the query state and clear search box\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <ScrollBar />\n      <div className=\"title\">\n        <Header />\n      </div>\n      <form className=\"searchForm\" onSubmit={getSearch}>\n        <input\n          className=\"inputField\"\n          type=\"text\"\n          value={search}\n          placeholder=\"Enter your favourite dish\"\n          onChange={updateSearch}\n        ></input>\n        <button className=\"searchButton\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      <div className=\"allRecipes\">\n        {recipes.map((r, i) => (\n          <Recipe\n            key={\"recipe\" + i}\n            title={r.recipe.label}\n            calories={r.recipe.calories}\n            img={r.recipe.image}\n            cuisine={r.recipe.cuisineType}\n            ingredients={r.recipe.ingredients}\n          />\n        ))}\n      </div>\n      <div className=\"footer\">\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}